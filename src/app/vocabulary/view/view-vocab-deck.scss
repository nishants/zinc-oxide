$exposure_container_height: 115px;
$exposure_size: 30px;
$exposure_current_size: 45px;
$max_exposure_count: 6;
$connector_thickness: 2px;
$marker_width: 170px;
$marker_height: 30px;

$marker_speak_size: 10px;

$current_exposure_bottom: $exposure_current_size/2 + $exposure_size/2 - $padding/2;
$speak_bottom: $padding*1.5 + $exposure_current_size + $marker_speak_size;

$title_height: 50px;
$title_max_width: 90px;

.vocabset.card{
  .deck{
    position: relative;
    border: $very_light_border;
    padding: 2*$padding 2*$padding 4*$padding;
    margin : $padding 2*$padding 4*$padding;
    border-radius: $border_radius;

    label.deck-title{
      display     : block;
      position    : absolute;
      top         : -$title_height/2;
      left        : calc(50% - #{$title_max_width/2});
      line-height : $title_height;
      height      : $title_height;
      margin      : auto;

      padding     : 0px $padding;
      text-align  : center;
      background  : $vocab_card_bg;
      font-size   : $large_font;
      letter-spacing: 1px;
      color       : $very_light_text;
    }
    .words{
      text-align: center;
      font-weight: $weight_bold;
      padding: $padding;
      margin: $padding 0px;
      .quote{
        position: relative;
        top: -$padding;
        padding: 0px $padding;
        text-align: left;
        font-weight: $weight_light;
        font-size :$small_font;
        color: $very_light_text;
      }
      .text{
        font-size: $large_font;
        word-spacing: $padding/2;
        text-transform: capitalize;
      }
    }
    ul.exposures{
      @extend .undo-list;
      @extend .resize-container;
      width: 100%;
      position: relative;
      z-index: 2;
      > li {
        float: left;
        width: calc(100%/#{$max_exposure_count});
        .exposure{
          width     : 100%;
          padding   : 0px $padding;
          height    : $exposure_container_height;
          position  : relative;
          .marker{
            position    : absolute;
            bottom      : $speak_bottom + $marker_speak_size;
            left        : -$padding;
            height      : $marker_height;
            line-height : $marker_height;
            width       : $marker_width;
            border-radius: $message_border_radius;
            text-align: center;
            font-size: $extra_small_font;
            background-color: $vocab_exposure_connector_color;
          }
          .marker.bonus{
            //background-color: $vocab_exposure_highlight_state_bg;
          }
          .speak{
            position: absolute;
            bottom: $speak_bottom;
            left: $exposure_current_size/2;
            @include speak-bottom($marker_speak_size, $marker_speak_size, $vocab_exposure_connector_color);
          }
          //.speak.bonus{
          //  @include speak-bottom($marker_speak_size, $marker_speak_size, $vocab_exposure_highlight_state_bg);
          //}
          .state{
            position      : absolute;
            margin        : auto;
            border-radius : 50%;
            overflow      : hidden;
            text-align    : center;
            background-color: $vocab_exposure_state_bg;
          }
          .state:not(.current){
            width       : $exposure_size;
            height      : $exposure_size;
            line-height : $exposure_size;
            bottom      : $exposure_current_size/2 + $exposure_size/2 - $padding/2;
          }
          .state.current{
            width       : $exposure_current_size;
            height      : $exposure_current_size;
            line-height : $exposure_current_size;
            bottom      : $exposure_current_size/2;
            border      : $very_light_border;

            max-width   : calc(100% - #{$padding}/2);
            margin      : auto;
          }
          .state.playable{
            cursor: pointer;
            box-shadow: $button_shadow;
            background-color: $vocab_exposure_highlight_state_bg;
            @include transition($transition);
          }
          .state.playable:hover{
            box-shadow: $card_elevated_shadow;
          }
          .state.completed{
            color : $vocab_exposure_completed_color;
          }
          .state.waiting{
            cursor : not-allowed;
          }
        }
      }
    }
    ul.exposures > li:nth-child(1) > .exposure{
      .marker{
        left: 0px;
      }
    }
    ul.exposures > li:nth-child(#{$max_exposure_count + 1}) > .exposure{
      .marker{
        left: calc(100% - #{$marker_width});
      }
    }
    ul.exposures > li:nth-child(#{$max_exposure_count - 1 +1}) > .exposure{
      .marker{
        left: calc(100% - #{$marker_width} + 100%/#{$max_exposure_count});
      }
    }
    ul.exposures > li:nth-child(#{$max_exposure_count - 2 +1}) > .exposure{
      .marker{
        left: -50%;
      }
    }

    .connector{
      position: absolute;
      bottom  : $exposure_current_size;
      left    : $padding*2;
      width: calc(100% - #{$padding}*2 - 100%/#{$max_exposure_count} + #{$exposure_size/2});
      height: $connector_thickness;
      background-color: $vocab_exposure_connector_color;
    }
    button.study-words{
      @extend .outline;
      margin-top: 2*$padding ;
      width: 100%;
    }
  }
}